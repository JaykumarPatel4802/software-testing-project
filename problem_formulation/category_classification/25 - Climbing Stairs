Problem:

You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


---

Examples:

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

---

Complete the following function with the solution.
cclass Solution:
    def climbStairs(self, n: int) -> int:lass Solution(object):

---

This problem belongs to one of the following categories: "Arrays and Hashing", "Two Pointer", "Trees", "Graphs", "Backtracking", and "DP". Your job is to tell me which category it belongs to. Don't provide me an explanation. Simply provide the category.