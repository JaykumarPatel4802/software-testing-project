Problem:

Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
---

Examples:

Example 1:

     1 <-
    / \
   2   3 <-
    \   \ 
     5   4 <-

Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

Example 2:

      1 <-
     / \
    2   3 <-
   /
  4 <-
 /
5 <-
    

Input: root = [1,2,3,4,null,null,null,5]
Output: [1,3,4,5]

---

Complete the following function with the solution.

"""Definition for a binary tree node.
class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
"""
class Solution:
    class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:

        
        
---

This problem belongs to one of the following categories: "Arrays and Hashing", "Two Pointer", "Trees", "Graphs", "Backtracking", and "DP". Your job is to tell me which category it belongs to. Don't provide me an explanation. Simply provide the category.