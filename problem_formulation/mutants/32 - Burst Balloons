Problem:

You have n balloons, numbered from 0 to n - 1. Each balloon has a number written on it, represented by the array balloons. When you pop the i-th balloon, the number of coins you earn is equal to balloons[i - 1] * balloons[i] * balloons[i + 1]. If the index i - 1 or i + 1 is outside the bounds of the array, treat it as having a balloon with the value 1.

You have to pop all balloons. Your goal is to find the maximum number of coins you can collect by popping the balloons in an optimal order.

---

Examples:

Example 1:
Input: balloons = [2,4,3]
Output: 33
Explanation:
balloons = [2,4,3] --> [2,3] --> [3]  --> []
coins =     2*4*3   +  1*2*3  + 1*3*1  =  33

---

Complete the following function with the solution.
class Solution:
    def maxCoins(self, balloons: List[int]) -> int:
        
---

Your job is to come up with a correct solution. Optimize the solution such that it has the fast runtime possible for that problem. Write syntatically correct code for Python 3.0 that can run without any runtime errors and solves the problem at hand. Make sure to pay attention to the types of the inputs to the functions, and the type of the output of the function.
